// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../node_modules/.prisma/client"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Owner {
  id        Int     @id @default(autoincrement())
  firstName String  @map("first_name")
  lastName  String  @map("last_name")
  address   String
  city      String
  telephone String
  pets      Pet[]
}

model Pet {
  id        Int      @id @default(autoincrement())
  name      String
  birthDate DateTime @map("birth_date")
  type      PetType  @relation(fields: [typeId], references: [id])
  typeId    Int      @map("type_id")
  owner     Owner    @relation(fields: [ownerId], references: [id])
  ownerId   Int      @map("owner_id")
  visits    Visit[]

  @@index([ownerId])
  @@index([typeId])
}

model PetType {
  id   Int    @id @default(autoincrement())
  name String @unique
  pets Pet[]
}

model Vet {
  id          Int         @id @default(autoincrement())
  firstName   String      @map("first_name")
  lastName    String      @map("last_name")
  specialties Specialty[] @relation("VetSpecialties")
  visits      Visit[]
}

model Specialty {
  id   Int    @id @default(autoincrement())
  name String @unique
  vets Vet[]  @relation("VetSpecialties")
}

model Visit {
  id          Int      @id @default(autoincrement())
  visitDate   DateTime @map("visit_date")
  description String
  pet         Pet      @relation(fields: [petId], references: [id])
  petId       Int      @map("pet_id")
  vet         Vet      @relation(fields: [vetId], references: [id])
  vetId       Int      @map("vet_id")

  @@index([petId])
  @@index([vetId])
}
